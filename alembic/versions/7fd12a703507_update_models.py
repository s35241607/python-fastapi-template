"""Update models

Revision ID: 7fd12a703507
Revises: bf26b7859ae8
Create Date: 2025-10-10 10:27:22.640597

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7fd12a703507"
down_revision: str | Sequence[str] | None = "bf26b7859ae8"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attachments",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("related_type", sa.String(length=50), nullable=False),
        sa.Column("related_id", sa.BigInteger(), nullable=False),
        sa.Column("ticket_id", sa.BigInteger(), nullable=True),
        sa.Column("usage_type", sa.Enum("INLINE", "GENERAL", name="attachment_usage_type", schema="ticket"), nullable=False),
        sa.Column("file_name", sa.String(length=255), nullable=False),
        sa.Column("storage_path", sa.String(length=500), nullable=False),
        sa.Column("file_size", sa.BigInteger(), nullable=False),
        sa.Column("mime_type", sa.String(length=100), nullable=False),
        sa.Column("storage_provider", sa.String(length=50), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created_by", sa.BigInteger(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_by", sa.BigInteger(), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="ticket",
    )
    op.create_table(
        "approval_template_step_approvers",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("approval_template_step_id", sa.BigInteger(), nullable=False),
        sa.Column("role_id", sa.BigInteger(), nullable=True),
        sa.Column("user_id", sa.BigInteger(), nullable=True),
        sa.Column("created_by", sa.BigInteger(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_by", sa.BigInteger(), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["approval_template_step_id"], ["ticket.approval_template_steps.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("approval_template_step_id", "role_id", "user_id"),
        schema="ticket",
    )
    op.create_table(
        "approval_process_step_approvers",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("approval_process_step_id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=True),
        sa.Column("role_id", sa.BigInteger(), nullable=True),
        sa.Column("actioned_by_id", sa.BigInteger(), nullable=True),
        sa.Column("delegated_for_id", sa.BigInteger(), nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM(
                "PENDING", "APPROVED", "REJECTED", name="approval_process_step_status", schema="ticket", create_type=False
            ),
            nullable=False,
        ),
        sa.Column("action_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column("created_by", sa.BigInteger(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_by", sa.BigInteger(), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["approval_process_step_id"], ["ticket.approval_process_steps.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="ticket",
    )
    op.drop_table("ticket_attachments", schema="ticket")
    op.drop_table("ticket_note_attachments", schema="ticket")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ticket_note_attachments",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("note_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("file_path", sa.VARCHAR(length=500), autoincrement=False, nullable=False),
        sa.Column("file_size", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("mime_type", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["note_id"], ["ticket.ticket_notes.id"], name=op.f("ticket_note_attachments_note_id_fkey"), ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("ticket_note_attachments_pkey")),
        schema="ticket",
    )
    op.create_table(
        "ticket_attachments",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("ticket_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("file_name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column("file_path", sa.VARCHAR(length=500), autoincrement=False, nullable=True),
        sa.Column("file_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("mime_type", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("updated_by", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("deleted_by", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("bucket_name", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("is_image", sa.BOOLEAN(), server_default=sa.text("false"), autoincrement=False, nullable=False),
        sa.Column("image_width", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("image_height", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "usage_type",
            sa.VARCHAR(length=50),
            server_default=sa.text("'attachment'::character varying"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "status",
            sa.VARCHAR(length=20),
            server_default=sa.text("'completed'::character varying"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("file_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("url_expires_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["ticket_id"], ["ticket.tickets.id"], name=op.f("ticket_attachments_ticket_id_fkey"), ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("ticket_attachments_pkey")),
        schema="ticket",
    )
    op.drop_table("approval_process_step_approvers", schema="ticket")
    op.drop_table("approval_template_step_approvers", schema="ticket")
    op.drop_table("attachments", schema="ticket")
    # ### end Alembic commands ###
